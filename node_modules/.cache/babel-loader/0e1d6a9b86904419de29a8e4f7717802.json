{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nexports.isNumber = isNumber;\nexports.formatTimeItem = formatTimeItem;\nexports.validateTimeAndCursor = validateTimeAndCursor;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar DEFAULT_COLON = ':';\nvar DEFAULT_VALUE_SHORT = '00' + DEFAULT_COLON + '00';\nvar DEFAULT_VALUE_FULL = '00' + DEFAULT_COLON + '00' + DEFAULT_COLON + '00';\n\nfunction isNumber(value) {\n  var number = Number(value);\n  return !isNaN(number) && String(value) === String(number);\n}\n\nfunction formatTimeItem(value) {\n  return ((value || '') + '00').substr(0, 2);\n}\n\nfunction validateTimeAndCursor() {\n  var showSeconds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var colon = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_COLON;\n  var cursorPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n\n  var _defaultValue$split = defaultValue.split(colon),\n      _defaultValue$split2 = _slicedToArray(_defaultValue$split, 3),\n      oldH = _defaultValue$split2[0],\n      oldM = _defaultValue$split2[1],\n      oldS = _defaultValue$split2[2];\n\n  var newCursorPosition = Number(cursorPosition);\n\n  var _String$split = String(value).split(colon),\n      _String$split2 = _slicedToArray(_String$split, 3),\n      newH = _String$split2[0],\n      newM = _String$split2[1],\n      newS = _String$split2[2];\n\n  newH = formatTimeItem(newH);\n\n  if (Number(newH[0]) > 2) {\n    newH = oldH;\n    newCursorPosition -= 1;\n  } else if (Number(newH[0]) === 2) {\n    if (Number(oldH[0]) === 2 && Number(newH[1]) > 3) {\n      newH = '2' + oldH[1];\n      newCursorPosition -= 2;\n    } else if (Number(newH[1]) > 3) {\n      newH = '23';\n    }\n  }\n\n  newM = formatTimeItem(newM);\n\n  if (Number(newM[0]) > 5) {\n    newM = oldM;\n    newCursorPosition -= 1;\n  }\n\n  if (showSeconds) {\n    newS = formatTimeItem(newS);\n\n    if (Number(newS[0]) > 5) {\n      newS = oldS;\n      newCursorPosition -= 1;\n    }\n  }\n\n  var validatedValue = showSeconds ? '' + newH + colon + newM + colon + newS : '' + newH + colon + newM;\n  return [validatedValue, newCursorPosition];\n}\n\nvar TimeField = function (_React$Component) {\n  _inherits(TimeField, _React$Component);\n\n  function TimeField(props) {\n    var _ref;\n\n    _classCallCheck(this, TimeField);\n\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var _this = _possibleConstructorReturn(this, (_ref = TimeField.__proto__ || Object.getPrototypeOf(TimeField)).call.apply(_ref, [this, props].concat(args)));\n\n    var _showSeconds = Boolean(props.showSeconds);\n\n    var _defaultValue = _showSeconds ? DEFAULT_VALUE_FULL : DEFAULT_VALUE_SHORT;\n\n    var _colon = props.colon && props.colon.length === 1 ? props.colon : DEFAULT_COLON;\n\n    var _validateTimeAndCurso = validateTimeAndCursor(_showSeconds, _this.props.value, _defaultValue, _colon),\n        _validateTimeAndCurso2 = _slicedToArray(_validateTimeAndCurso, 1),\n        validatedTime = _validateTimeAndCurso2[0];\n\n    _this.state = {\n      value: validatedTime,\n      _colon: _colon,\n      _showSeconds: _showSeconds,\n      _defaultValue: _defaultValue,\n      _maxLength: _defaultValue.length\n    };\n    _this.onInputChange = _this.onInputChange.bind(_this);\n    return _this;\n  }\n\n  _createClass(TimeField, [{\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.value !== prevProps.value) {\n        var _validateTimeAndCurso3 = validateTimeAndCursor(this.state._showSeconds, this.props.value, this.state._defaultValue, this.state._colon),\n            _validateTimeAndCurso4 = _slicedToArray(_validateTimeAndCurso3, 1),\n            validatedTime = _validateTimeAndCurso4[0];\n\n        this.setState({\n          value: validatedTime\n        });\n      }\n    }\n  }, {\n    key: 'onInputChange',\n    value: function onInputChange(event, callback) {\n      var oldValue = this.state.value;\n      var inputEl = event.target;\n      var inputValue = inputEl.value;\n      var position = inputEl.selectionEnd;\n      var isTyped = inputValue.length > oldValue.length;\n      var cursorCharacter = inputValue[position - 1];\n      var addedCharacter = isTyped ? cursorCharacter : null;\n      var removedCharacter = isTyped ? null : oldValue[position];\n      var replacedSingleCharacter = inputValue.length === oldValue.length ? oldValue[position - 1] : null;\n      var colon = this.state._colon;\n      var newValue = oldValue;\n      var newPosition = position;\n\n      if (addedCharacter !== null) {\n        if (position > this._maxLength) {\n          newPosition = this._maxLength;\n        } else if ((position === 3 || position === 6) && addedCharacter === colon) {\n          newValue = '' + inputValue.substr(0, position - 1) + colon + inputValue.substr(position + 1);\n        } else if ((position === 3 || position === 6) && isNumber(addedCharacter)) {\n          newValue = '' + inputValue.substr(0, position - 1) + colon + addedCharacter + inputValue.substr(position + 2);\n          newPosition = position + 1;\n        } else if (isNumber(addedCharacter)) {\n          // user typed a number\n          newValue = inputValue.substr(0, position - 1) + addedCharacter + inputValue.substr(position + 1);\n\n          if (position === 2 || position === 5) {\n            newPosition = position + 1;\n          }\n        } else {\n          // if user typed NOT a number, then keep old value & position\n          newPosition = position - 1;\n        }\n      } else if (replacedSingleCharacter !== null) {\n        // user replaced only a single character\n        if (isNumber(cursorCharacter)) {\n          if (position - 1 === 2 || position - 1 === 5) {\n            newValue = '' + inputValue.substr(0, position - 1) + colon + inputValue.substr(position);\n          } else {\n            newValue = inputValue;\n          }\n        } else {\n          // user replaced a number on some non-number character\n          newValue = oldValue;\n          newPosition = position - 1;\n        }\n      } else if (typeof cursorCharacter !== 'undefined' && cursorCharacter !== colon && !isNumber(cursorCharacter)) {\n        // set of characters replaced by non-number\n        newValue = oldValue;\n        newPosition = position - 1;\n      } else if (removedCharacter !== null) {\n        if ((position === 2 || position === 5) && removedCharacter === colon) {\n          newValue = inputValue.substr(0, position - 1) + '0' + colon + inputValue.substr(position);\n          newPosition = position - 1;\n        } else {\n          // user removed a number\n          newValue = inputValue.substr(0, position) + '0' + inputValue.substr(position);\n        }\n      }\n\n      var _validateTimeAndCurso5 = validateTimeAndCursor(this.state._showSeconds, newValue, oldValue, colon, newPosition),\n          _validateTimeAndCurso6 = _slicedToArray(_validateTimeAndCurso5, 2),\n          validatedTime = _validateTimeAndCurso6[0],\n          validatedCursorPosition = _validateTimeAndCurso6[1];\n\n      this.setState({\n        value: validatedTime\n      }, function () {\n        inputEl.selectionStart = validatedCursorPosition;\n        inputEl.selectionEnd = validatedCursorPosition;\n        callback(event, validatedTime);\n      });\n      event.persist();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var value = this.state.value;\n\n      var _props = this.props,\n          onChange = _props.onChange,\n          style = _props.style,\n          showSeconds = _props.showSeconds,\n          input = _props.input,\n          colon = _props.colon,\n          props = _objectWithoutProperties(_props, ['onChange', 'style', 'showSeconds', 'input', 'colon']); //eslint-disable-line no-unused-vars\n\n\n      var onChangeHandler = function onChangeHandler(event) {\n        return _this2.onInputChange(event, function (e, v) {\n          return onChange && onChange(e, v);\n        });\n      };\n\n      if (input) {\n        return _react2.default.cloneElement(input, _extends({}, props, {\n          value: value,\n          style: style,\n          onChange: onChangeHandler\n        }));\n      }\n\n      return _react2.default.createElement('input', _extends({\n        type: 'text'\n      }, props, {\n        value: value,\n        onChange: onChangeHandler,\n        style: _extends({\n          width: showSeconds ? 54 : 35\n        }, style)\n      }));\n    }\n  }]);\n\n  return TimeField;\n}(_react2.default.Component);\n\nTimeField.propTypes = {\n  value: _propTypes2.default.string.isRequired,\n  onChange: _propTypes2.default.func.isRequired,\n  showSeconds: _propTypes2.default.bool,\n  input: _propTypes2.default.element,\n  colon: _propTypes2.default.string,\n  style: _propTypes2.default.object\n};\nTimeField.defaultProps = {\n  showSeconds: false,\n  input: null,\n  style: {},\n  colon: DEFAULT_COLON\n};\nexports.default = TimeField;","map":null,"metadata":{},"sourceType":"script"}