{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport * as React from 'react';\nimport { I18n, ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { Auth } from '@aws-amplify/auth';\nimport { AuthPiece } from './AuthPiece';\nimport { FormSection, SectionHeader, SectionBody, SectionFooter, FormField, Input, InputLabel, Button, Link, SectionFooterPrimaryContent, SectionFooterSecondaryContent } from '../Amplify-UI/Amplify-UI-Components-React';\nimport { auth } from '../Amplify-UI/data-test-attributes';\nimport { countryDialCodes } from './common/country-dial-codes';\nimport { signUpWithUsernameFields, signUpWithEmailFields, signUpWithPhoneNumberFields } from './common/default-sign-up-fields';\nimport { UsernameAttributes } from './common/types';\nimport { PhoneField } from './PhoneField';\nvar logger = new Logger('SignUp');\n\nvar SignUp =\n/** @class */\nfunction (_super) {\n  __extends(SignUp, _super);\n\n  function SignUp(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {\n      requestPending: false\n    };\n    _this._validAuthStates = ['signUp'];\n    _this.signUp = _this.signUp.bind(_this);\n    _this.sortFields = _this.sortFields.bind(_this);\n    _this.getDefaultDialCode = _this.getDefaultDialCode.bind(_this);\n    _this.checkCustomSignUpFields = _this.checkCustomSignUpFields.bind(_this);\n    _this.needPrefix = _this.needPrefix.bind(_this);\n    _this.header = _this.props && _this.props.signUpConfig && _this.props.signUpConfig.header ? _this.props.signUpConfig.header : 'Create a new account';\n    var _a = (_this.props || {}).usernameAttributes,\n        usernameAttributes = _a === void 0 ? UsernameAttributes.USERNAME : _a;\n\n    if (usernameAttributes === UsernameAttributes.EMAIL) {\n      _this.defaultSignUpFields = signUpWithEmailFields;\n    } else if (usernameAttributes === UsernameAttributes.PHONE_NUMBER) {\n      _this.defaultSignUpFields = signUpWithPhoneNumberFields;\n    } else {\n      _this.defaultSignUpFields = signUpWithUsernameFields;\n    }\n\n    return _this;\n  }\n\n  SignUp.prototype.validate = function () {\n    var _this = this;\n\n    var invalids = [];\n    this.signUpFields.map(function (el) {\n      if (el.key !== 'phone_number') {\n        if (el.required && !_this.inputs[el.key]) {\n          el.invalid = true;\n          invalids.push(el.label);\n        } else {\n          el.invalid = false;\n        }\n      } else {\n        if (el.required && !_this.phone_number) {\n          el.invalid = true;\n          invalids.push(el.label);\n        } else {\n          el.invalid = false;\n        }\n      }\n    });\n    return invalids;\n  };\n\n  SignUp.prototype.sortFields = function () {\n    var _this = this;\n\n    if (this.props.signUpConfig && this.props.signUpConfig.hiddenDefaults && this.props.signUpConfig.hiddenDefaults.length > 0) {\n      this.defaultSignUpFields = this.defaultSignUpFields.filter(function (d) {\n        return !_this.props.signUpConfig.hiddenDefaults.includes(d.key);\n      });\n    }\n\n    if (this.checkCustomSignUpFields()) {\n      if (!this.props.signUpConfig || !this.props.signUpConfig.hideAllDefaults) {\n        // see if fields passed to component should override defaults\n        this.defaultSignUpFields.forEach(function (f) {\n          var matchKey = _this.signUpFields.findIndex(function (d) {\n            return d.key === f.key;\n          });\n\n          if (matchKey === -1) {\n            _this.signUpFields.push(f);\n          }\n        });\n      }\n      /*\n      sort fields based on following rules:\n      1. Fields with displayOrder are sorted before those without displayOrder\n      2. Fields with conflicting displayOrder are sorted alphabetically by key\n      3. Fields without displayOrder are sorted alphabetically by key\n      */\n\n\n      this.signUpFields.sort(function (a, b) {\n        if (a.displayOrder && b.displayOrder) {\n          if (a.displayOrder < b.displayOrder) {\n            return -1;\n          } else if (a.displayOrder > b.displayOrder) {\n            return 1;\n          } else {\n            if (a.key < b.key) {\n              return -1;\n            } else {\n              return 1;\n            }\n          }\n        } else if (!a.displayOrder && b.displayOrder) {\n          return 1;\n        } else if (a.displayOrder && !b.displayOrder) {\n          return -1;\n        } else if (!a.displayOrder && !b.displayOrder) {\n          if (a.key < b.key) {\n            return -1;\n          } else {\n            return 1;\n          }\n        }\n      });\n    } else {\n      this.signUpFields = this.defaultSignUpFields;\n    }\n  };\n\n  SignUp.prototype.needPrefix = function (key) {\n    var field = this.signUpFields.find(function (e) {\n      return e.key === key;\n    });\n\n    if (key.indexOf('custom:') !== 0) {\n      return field.custom;\n    } else if (key.indexOf('custom:') === 0 && field.custom === false) {\n      logger.warn('Custom prefix prepended to key but custom field flag is set to false; retaining manually entered prefix');\n    }\n\n    return null;\n  };\n\n  SignUp.prototype.getDefaultDialCode = function () {\n    return this.props.signUpConfig && this.props.signUpConfig.defaultCountryCode && countryDialCodes.indexOf(\"+\" + this.props.signUpConfig.defaultCountryCode) !== -1 ? \"+\" + this.props.signUpConfig.defaultCountryCode : '+1';\n  };\n\n  SignUp.prototype.checkCustomSignUpFields = function () {\n    return this.props.signUpConfig && this.props.signUpConfig.signUpFields && this.props.signUpConfig.signUpFields.length > 0;\n  };\n\n  SignUp.prototype.signUp = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var validation, signup_info, inputKeys, inputVals, labelCheck, data, err_1;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.setState({\n              requestPending: true\n            });\n\n            if (!this.inputs.dial_code) {\n              this.inputs.dial_code = this.getDefaultDialCode();\n            }\n\n            validation = this.validate();\n\n            if (validation && validation.length > 0) {\n              this.setState({\n                requestPending: false\n              });\n              return [2\n              /*return*/\n              , this.error(\"The following fields need to be filled out: \" + validation.join(', '))];\n            }\n\n            if (!Auth || typeof Auth.signUp !== 'function') {\n              throw new Error('No Auth module found, please ensure @aws-amplify/auth is imported');\n            }\n\n            signup_info = {\n              username: this.inputs.username,\n              password: this.inputs.password,\n              attributes: {}\n            };\n            inputKeys = Object.keys(this.inputs);\n            inputVals = Object.values(this.inputs);\n            inputKeys.forEach(function (key, index) {\n              if (!['username', 'password', 'checkedValue', 'dial_code'].includes(key)) {\n                if (key !== 'phone_line_number' && key !== 'dial_code' && key !== 'error') {\n                  var newKey = \"\" + (_this.needPrefix(key) ? 'custom:' : '') + key;\n                  signup_info.attributes[newKey] = inputVals[index];\n                }\n              }\n            });\n            if (this.phone_number) signup_info.attributes['phone_number'] = this.phone_number;\n            labelCheck = false;\n            this.signUpFields.forEach(function (field) {\n              if (field.label === _this.getUsernameLabel()) {\n                logger.debug(\"Changing the username to the value of \" + field.label);\n                signup_info.username = signup_info.attributes[field.key] || signup_info.username;\n                labelCheck = true;\n              }\n            });\n\n            if (!labelCheck && !signup_info.username) {\n              // if the customer customized the username field in the sign up form\n              // He needs to either set the key of that field to 'username'\n              // Or make the label of the field the same as the 'usernameAttributes'\n              throw new Error(\"Couldn't find the label: \" + this.getUsernameLabel() + \", in sign up fields according to usernameAttributes!\");\n            }\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3, 4, 5]);\n\n            return [4\n            /*yield*/\n            , Auth.signUp(signup_info)];\n\n          case 2:\n            data = _a.sent(); // @ts-ignore\n\n            this.changeState('confirmSignUp', data.user.username);\n            return [3\n            /*break*/\n            , 5];\n\n          case 3:\n            err_1 = _a.sent();\n            this.error(err_1);\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            this.setState({\n              requestPending: false\n            });\n            return [7\n            /*endfinally*/\n            ];\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  SignUp.prototype.showComponent = function (theme) {\n    var _this = this;\n\n    var hide = this.props.hide;\n\n    if (hide && hide.includes(SignUp)) {\n      return null;\n    }\n\n    if (this.checkCustomSignUpFields()) {\n      this.signUpFields = this.props.signUpConfig.signUpFields;\n    }\n\n    this.sortFields();\n    return React.createElement(FormSection, {\n      theme: theme,\n      \"data-test\": auth.signUp.section\n    }, React.createElement(SectionHeader, {\n      theme: theme,\n      \"data-test\": auth.signUp.headerSection\n    }, I18n.get(this.header)), React.createElement(SectionBody, {\n      theme: theme,\n      \"data-test\": auth.signUp.bodySection\n    }, this.signUpFields.map(function (field) {\n      return field.key !== 'phone_number' ? React.createElement(FormField, {\n        theme: theme,\n        key: field.key\n      }, field.required ? React.createElement(InputLabel, {\n        theme: theme\n      }, I18n.get(field.label), \" *\") : React.createElement(InputLabel, {\n        theme: theme\n      }, I18n.get(field.label)), React.createElement(Input, {\n        autoFocus: _this.signUpFields.findIndex(function (f) {\n          return f.key === field.key;\n        }) === 0,\n        placeholder: I18n.get(field.placeholder),\n        theme: theme,\n        type: field.type,\n        name: field.key,\n        key: field.key,\n        onChange: _this.handleInputChange,\n        \"data-test\": auth.signUp.nonPhoneNumberInput\n      })) : React.createElement(PhoneField, {\n        theme: theme,\n        required: field.required,\n        defaultDialCode: _this.getDefaultDialCode(),\n        label: field.label,\n        placeholder: field.placeholder,\n        onChangeText: _this.onPhoneNumberChanged,\n        key: \"phone_number\"\n      });\n    })), React.createElement(SectionFooter, {\n      theme: theme,\n      \"data-test\": auth.signUp.footerSection\n    }, React.createElement(SectionFooterPrimaryContent, {\n      theme: theme\n    }, React.createElement(Button, {\n      disabled: this.state.requestPending,\n      onClick: this.signUp,\n      theme: theme,\n      \"data-test\": auth.signUp.createAccountButton\n    }, I18n.get('Create Account'))), React.createElement(SectionFooterSecondaryContent, {\n      theme: theme\n    }, I18n.get('Have an account? '), React.createElement(Link, {\n      theme: theme,\n      onClick: function onClick() {\n        return _this.changeState('signIn');\n      },\n      \"data-test\": auth.signUp.signInLink\n    }, I18n.get('Sign in')))));\n  };\n\n  return SignUp;\n}(AuthPiece);\n\nexport { SignUp };\n/**\n * @deprecated use named import\n */\n\nexport default SignUp;","map":null,"metadata":{},"sourceType":"module"}