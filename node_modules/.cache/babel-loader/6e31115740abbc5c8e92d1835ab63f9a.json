{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { isEmpty, I18n, ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { Auth } from '@aws-amplify/auth';\nimport AmplifyTheme from '../Amplify-UI/Amplify-UI-Theme';\nimport { FormSection, SectionBody, Strike } from '../Amplify-UI/Amplify-UI-Components-React';\nimport { auth } from '../Amplify-UI/data-test-attributes';\nimport { GoogleButton, FacebookButton, AmazonButton, OAuthButton, Auth0Button } from './Provider';\nvar logger = new Logger('FederatedSignIn');\n\nvar FederatedButtons =\n/** @class */\nfunction (_super) {\n  __extends(FederatedButtons, _super);\n\n  function FederatedButtons() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FederatedButtons.prototype.google = function (google_client_id) {\n    if (!google_client_id) {\n      return null;\n    }\n\n    var _a = this.props,\n        theme = _a.theme,\n        onStateChange = _a.onStateChange;\n    return React.createElement(GoogleButton, {\n      google_client_id: google_client_id,\n      theme: theme,\n      onStateChange: onStateChange\n    });\n  };\n\n  FederatedButtons.prototype.facebook = function (facebook_app_id) {\n    if (!facebook_app_id) {\n      return null;\n    }\n\n    var _a = this.props,\n        theme = _a.theme,\n        onStateChange = _a.onStateChange;\n    return React.createElement(FacebookButton, {\n      facebook_app_id: facebook_app_id,\n      theme: theme,\n      onStateChange: onStateChange\n    });\n  };\n\n  FederatedButtons.prototype.amazon = function (amazon_client_id) {\n    if (!amazon_client_id) {\n      return null;\n    }\n\n    var _a = this.props,\n        theme = _a.theme,\n        onStateChange = _a.onStateChange;\n    return React.createElement(AmazonButton, {\n      amazon_client_id: amazon_client_id,\n      theme: theme,\n      onStateChange: onStateChange\n    });\n  };\n\n  FederatedButtons.prototype.OAuth = function (oauth_config) {\n    if (!oauth_config) {\n      return null;\n    }\n\n    var _a = this.props,\n        theme = _a.theme,\n        onStateChange = _a.onStateChange;\n    return React.createElement(OAuthButton, {\n      label: oauth_config ? oauth_config.label : undefined,\n      theme: theme,\n      onStateChange: onStateChange\n    });\n  };\n\n  FederatedButtons.prototype.auth0 = function (auth0) {\n    if (!auth0) {\n      return null;\n    }\n\n    var _a = this.props,\n        theme = _a.theme,\n        onStateChange = _a.onStateChange;\n    return React.createElement(Auth0Button, {\n      label: auth0 ? auth0.label : undefined,\n      theme: theme,\n      onStateChange: onStateChange,\n      auth0: auth0\n    });\n  };\n\n  FederatedButtons.prototype.render = function () {\n    var authState = this.props.authState;\n\n    if (!['signIn', 'signedOut', 'signedUp'].includes(authState)) {\n      return null;\n    }\n\n    var federated = this.props.federated || {};\n\n    if (!Auth || typeof Auth.configure !== 'function') {\n      throw new Error('No Auth module found, please ensure @aws-amplify/auth is imported');\n    } // @ts-ignore\n\n\n    var _a = Auth.configure().oauth,\n        oauth = _a === void 0 ? {} : _a; // backward compatibility\n\n    if (oauth['domain']) {\n      federated.oauth_config = Object.assign({}, federated.oauth_config, oauth); // @ts-ignore\n    } else if (oauth.awsCognito) {\n      // @ts-ignore\n      federated.oauth_config = Object.assign({}, federated.oauth_config, // @ts-ignore\n      oauth.awsCognito);\n    } // @ts-ignore\n\n\n    if (oauth.auth0) {\n      // @ts-ignore\n      federated.auth0 = Object.assign({}, federated.auth0, oauth.auth0);\n    }\n\n    if (isEmpty(federated)) {\n      return null;\n    }\n\n    var google_client_id = federated.google_client_id,\n        facebook_app_id = federated.facebook_app_id,\n        amazon_client_id = federated.amazon_client_id,\n        oauth_config = federated.oauth_config,\n        auth0 = federated.auth0;\n    var theme = this.props.theme || AmplifyTheme;\n    return React.createElement(\"div\", null, React.createElement(\"div\", null, this.google(google_client_id)), React.createElement(\"div\", null, this.facebook(facebook_app_id)), React.createElement(\"div\", null, this.amazon(amazon_client_id)), React.createElement(\"div\", null, this.OAuth(oauth_config)), React.createElement(\"div\", null, this.auth0(auth0)), React.createElement(Strike, {\n      theme: theme\n    }, I18n.get('or')));\n  };\n\n  return FederatedButtons;\n}(React.Component);\n\nexport { FederatedButtons };\n\nvar FederatedSignIn =\n/** @class */\nfunction (_super) {\n  __extends(FederatedSignIn, _super);\n\n  function FederatedSignIn() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FederatedSignIn.prototype.render = function () {\n    var _a = this.props,\n        authState = _a.authState,\n        onStateChange = _a.onStateChange;\n    var federated = this.props.federated || {};\n\n    if (!Auth || typeof Auth.configure !== 'function') {\n      throw new Error('No Auth module found, please ensure @aws-amplify/auth is imported');\n    } // @ts-ignore\n\n\n    var _b = Auth.configure().oauth,\n        oauth = _b === void 0 ? {} : _b; // backward compatibility\n\n    if (oauth['domain']) {\n      federated.oauth_config = Object.assign({}, federated.oauth_config, oauth); // @ts-ignore\n    } else if (oauth.awsCognito) {\n      // @ts-ignore\n      federated.oauth_config = Object.assign({}, federated.oauth_config, // @ts-ignore\n      oauth.awsCognito);\n    } // @ts-ignore\n\n\n    if (oauth.auth0) {\n      // @ts-ignore\n      federated.auth0 = Object.assign({}, federated.auth0, oauth.auth0);\n    }\n\n    if (!federated) {\n      logger.debug('federated prop is empty. show nothing');\n      logger.debug('federated={google_client_id: , facebook_app_id: , amazon_client_id}');\n      return null;\n    } // @ts-ignore\n\n\n    if (!['signIn', 'signedOut', 'signedUp'].includes(authState)) {\n      return null;\n    }\n\n    logger.debug('federated Config is', federated);\n    var theme = this.props.theme || AmplifyTheme;\n    return React.createElement(FormSection, {\n      theme: theme,\n      \"data-test\": auth.federatedSignIn.section\n    }, React.createElement(SectionBody, {\n      theme: theme,\n      \"data-test\": auth.federatedSignIn.bodySection\n    }, React.createElement(FederatedButtons, {\n      federated: federated,\n      theme: theme,\n      authState: authState,\n      onStateChange: onStateChange,\n      \"data-test\": auth.federatedSignIn.signInButtons\n    })));\n  };\n\n  return FederatedSignIn;\n}(React.Component);\n\nexport { FederatedSignIn };\n/**\n * @deprecated use named import\n */\n\nexport default FederatedSignIn;","map":null,"metadata":{},"sourceType":"module"}