{"ast":null,"code":"/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { Amplify, I18n, ConsoleLogger as Logger, Hub } from '@aws-amplify/core';\nimport { Auth } from '@aws-amplify/auth';\nimport { Greetings } from './Greetings';\nimport { SignIn } from './SignIn';\nimport { ConfirmSignIn } from './ConfirmSignIn';\nimport { RequireNewPassword } from './RequireNewPassword';\nimport { SignUp } from './SignUp';\nimport { Loading } from './Loading';\nimport { ConfirmSignUp } from './ConfirmSignUp';\nimport { VerifyContact } from './VerifyContact';\nimport { ForgotPassword } from './ForgotPassword';\nimport { TOTPSetup } from './TOTPSetup';\nimport { Constants } from './common/constants';\nimport AmplifyTheme from '../Amplify-UI/Amplify-UI-Theme';\nimport { AmplifyMessageMap } from '../AmplifyMessageMap';\nimport { Container, Toast } from '../Amplify-UI/Amplify-UI-Components-React';\nimport { auth } from '../Amplify-UI/data-test-attributes';\nvar logger = new Logger('Authenticator');\nvar AUTHENTICATOR_AUTHSTATE = 'amplify-authenticator-authState';\nexport var EmptyContainer = function EmptyContainer(_a) {\n  var children = _a.children;\n  return React.createElement(React.Fragment, null, children);\n};\n\nvar Authenticator =\n/** @class */\nfunction (_super) {\n  __extends(Authenticator, _super);\n\n  function Authenticator(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.handleStateChange = _this.handleStateChange.bind(_this);\n    _this.handleAuthEvent = _this.handleAuthEvent.bind(_this);\n    _this.onHubCapsule = _this.onHubCapsule.bind(_this);\n    _this._initialAuthState = _this.props.authState || 'signIn';\n    _this.state = {\n      authState: 'loading'\n    };\n    Hub.listen('auth', _this.onHubCapsule);\n    return _this;\n  }\n\n  Authenticator.prototype.componentDidMount = function () {\n    var config = this.props.amplifyConfig;\n\n    if (config) {\n      Amplify.configure(config);\n    }\n\n    this._isMounted = true; // The workaround for Cognito Hosted UI:\n    // Don't check the user immediately if redirected back from Hosted UI as\n    // it might take some time for credentials to be available, instead\n    // wait for the hub event sent from Auth module. This item in the\n    // localStorage is a mark to indicate whether the app is just redirected\n    // back from Hosted UI or not and is set in Auth:handleAuthResponse.\n\n    var byHostedUI = localStorage.getItem(Constants.REDIRECTED_FROM_HOSTED_UI);\n    localStorage.removeItem(Constants.REDIRECTED_FROM_HOSTED_UI);\n    if (byHostedUI !== 'true') this.checkUser();\n  };\n\n  Authenticator.prototype.componentWillUnmount = function () {\n    this._isMounted = false;\n  };\n\n  Authenticator.prototype.checkUser = function () {\n    var _this = this;\n\n    if (!Auth || typeof Auth.currentAuthenticatedUser !== 'function') {\n      throw new Error('No Auth module found, please ensure @aws-amplify/auth is imported');\n    }\n\n    return Auth.currentAuthenticatedUser().then(function (user) {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      _this.handleStateChange('signedIn', user);\n    }).catch(function (err) {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var cachedAuthState = null;\n\n      try {\n        cachedAuthState = localStorage.getItem(AUTHENTICATOR_AUTHSTATE);\n      } catch (e) {\n        logger.debug('Failed to get the auth state from local storage', e);\n      }\n\n      var promise = cachedAuthState === 'signedIn' ? Auth.signOut() : Promise.resolve();\n      promise.then(function () {\n        return _this.handleStateChange(_this._initialAuthState);\n      }).catch(function (e) {\n        logger.debug('Failed to sign out', e);\n      });\n    });\n  };\n\n  Authenticator.prototype.onHubCapsule = function (capsule) {\n    var channel = capsule.channel,\n        payload = capsule.payload,\n        source = capsule.source;\n\n    if (channel === 'auth') {\n      switch (payload.event) {\n        case 'cognitoHostedUI':\n          this.handleStateChange('signedIn', payload.data);\n          break;\n\n        case 'cognitoHostedUI_failure':\n          this.handleStateChange('signIn', null);\n          break;\n\n        case 'parsingUrl_failure':\n          this.handleStateChange('signIn', null);\n          break;\n\n        case 'signOut':\n          this.handleStateChange('signIn', null);\n          break;\n\n        case 'customGreetingSignOut':\n          this.handleStateChange('signIn', null);\n          break;\n\n        default:\n          break;\n      }\n    }\n  };\n\n  Authenticator.prototype.handleStateChange = function (state, data) {\n    logger.debug('authenticator state change ' + state, data);\n\n    if (state === this.state.authState) {\n      return;\n    }\n\n    if (state === 'signedOut') {\n      state = 'signIn';\n    }\n\n    try {\n      localStorage.setItem(AUTHENTICATOR_AUTHSTATE, state);\n    } catch (e) {\n      logger.debug('Failed to set the auth state into local storage', e);\n    }\n\n    if (this._isMounted) {\n      this.setState({\n        authState: state,\n        authData: data,\n        error: null,\n        showToast: false\n      });\n    }\n\n    if (this.props.onStateChange) {\n      this.props.onStateChange(state, data);\n    }\n  };\n\n  Authenticator.prototype.handleAuthEvent = function (state, event, showToast) {\n    if (showToast === void 0) {\n      showToast = true;\n    }\n\n    if (event.type === 'error') {\n      var map = this.props.errorMessage || AmplifyMessageMap;\n      var message = typeof map === 'string' ? map : map(event.data);\n      this.setState({\n        error: message,\n        showToast: showToast\n      });\n    }\n  };\n\n  Authenticator.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.state,\n        authState = _a.authState,\n        authData = _a.authData;\n    var theme = this.props.theme || AmplifyTheme;\n    var messageMap = this.props.errorMessage || AmplifyMessageMap; // If container prop is undefined, default to AWS Amplify UI Container\n    // otherwise if truthy, use the supplied render prop\n    // otherwise if falsey, use EmptyContainer\n\n    var Wrapper = this.props.container === undefined ? Container : this.props.container || EmptyContainer;\n    var _b = this.props,\n        hideDefault = _b.hideDefault,\n        _c = _b.hide,\n        hide = _c === void 0 ? [] : _c,\n        federated = _b.federated,\n        signUpConfig = _b.signUpConfig,\n        usernameAttributes = _b.usernameAttributes;\n\n    if (hideDefault) {\n      hide = hide.concat([Greetings, SignIn, ConfirmSignIn, RequireNewPassword, SignUp, ConfirmSignUp, VerifyContact, ForgotPassword, TOTPSetup, Loading]);\n    }\n\n    var props_children = [];\n\n    if (typeof this.props.children === 'object') {\n      if (Array.isArray(this.props.children)) {\n        props_children = this.props.children;\n      } else {\n        props_children.push(this.props.children);\n      }\n    }\n\n    var default_children = [React.createElement(Greetings, {\n      federated: federated\n    }), React.createElement(SignIn, {\n      federated: federated\n    }), React.createElement(ConfirmSignIn, null), React.createElement(RequireNewPassword, null), React.createElement(SignUp, {\n      signUpConfig: signUpConfig\n    }), React.createElement(ConfirmSignUp, null), React.createElement(VerifyContact, null), React.createElement(ForgotPassword, null), React.createElement(TOTPSetup, null), React.createElement(Loading, null)];\n    var props_children_override = React.Children.map(props_children, function (child) {\n      return child.props.override;\n    });\n    hide = hide.filter(function (component) {\n      return !props_children.find(function (child) {\n        return child.type === component;\n      });\n    });\n    var render_props_children = React.Children.map(props_children, function (child, index) {\n      return React.cloneElement(child, {\n        key: 'aws-amplify-authenticator-props-children-' + index,\n        theme: theme,\n        messageMap: messageMap,\n        authState: authState,\n        authData: authData,\n        onStateChange: _this.handleStateChange,\n        onAuthEvent: _this.handleAuthEvent,\n        hide: hide,\n        override: props_children_override,\n        usernameAttributes: usernameAttributes\n      });\n    });\n    var render_default_children = hideDefault ? [] : React.Children.map(default_children, function (child, index) {\n      return React.cloneElement(child, {\n        key: 'aws-amplify-authenticator-default-children-' + index,\n        theme: theme,\n        messageMap: messageMap,\n        authState: authState,\n        authData: authData,\n        onStateChange: _this.handleStateChange,\n        onAuthEvent: _this.handleAuthEvent,\n        hide: hide,\n        override: props_children_override,\n        usernameAttributes: usernameAttributes\n      });\n    });\n    var render_children = render_default_children.concat(render_props_children);\n    var error = this.state.error;\n    return React.createElement(Wrapper, {\n      theme: theme\n    }, this.state.showToast && React.createElement(Toast, {\n      theme: theme,\n      onClose: function onClose() {\n        return _this.setState({\n          showToast: false\n        });\n      },\n      \"data-test\": auth.signIn.signInError\n    }, I18n.get(error)), render_children);\n  };\n\n  return Authenticator;\n}(React.Component);\n\nexport { Authenticator };\n/**\n * @deprecated use named import\n */\n\nexport default Authenticator;","map":null,"metadata":{},"sourceType":"module"}